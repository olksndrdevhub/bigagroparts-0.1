version: '3.3'

services:

  web_stag:
    build: 
      context: .
      dockerfile: Dockerfile.prod
    image: bigagroparts_stag:web
    container_name: bigagroparts_stag.web
    tty: true
    stdin_open: true
    restart: always
    command: >
      sh -c "gunicorn parts_shop.wsgi:application --bind 0.0.0.0:8000 --workers=2 --threads=4 --worker-class=gthread --log-level=debug"
    volumes:
      - .:/app
    expose:
      - 8000
    environment:
      PYTHONIOENCODING: UTF-8
      DJANGO_SETTINGS_MODULE: parts_shop.settings    
    env_file:
      - ./.env.staging
    depends_on:
      - db_stag

  db_stag:
    image: postgres:14.0-alpine
    container_name: bigagroparts_stag.db
    restart: always
    volumes: 
      - postgres_data_prod:/var/lib/postgresql/data/
    env_file:
      - ./.postgres.env

  nginx-proxy:
    container_name: nginx-proxy
    build: ./nginx
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web_stag
    
  acme-companion:
    image: nginxproxy/acme-companion
    container_name: acme-companion
    env_file:
      - ./.env.staging.proxy-companion
    volumes:
      - certs:/etc/nginx/certs:rw
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy
    
volumes:
  postgres_data_prod:
  certs:
  html:
  vhost:
  acme:
  conf:
